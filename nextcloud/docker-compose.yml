version: '3.3'


services:


  collabora:
    image: collabora/code:22.05.8.2.1
    restart: unless-stopped

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_network"

      - "traefik.http.routers.collabora-https.entrypoints=https"
      - "traefik.http.routers.collabora-https.rule=Host(`${COLLABORA_DOMAIN}`)"
      - "traefik.http.routers.collabora-https.tls.certresolver=letsencrypt"

      - "traefik.http.middlewares.collabora-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.collabora-https.redirectscheme.permanent=true"

      - "traefik.http.routers.collabora-http.entrypoints=http"
      - "traefik.http.routers.collabora-http.rule=Host(`${COLLABORA_DOMAIN}`)"
      - "traefik.http.routers.collabora-http.middlewares=collabora-https"


    environment:
      TZ: ${TZ}

      username: ${COLLABORA_ADMIN_USER}
      password: ${COLLABORA_ADMIN_PASSWORD}

      dictionaries: ${COLLABORA_DICTIONARIES}

      aliasgroup1: https://${NEXTCLOUD_DOMAIN}:443
      extra_params: --o:ssl.enable=false --o:ssl.termination=true

    networks:
      - traefik_network


  nextcloud_db:
    image: postgres:14-alpine
    restart: unless-stopped

    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${NEXTCLOUD_DATABASE_USER}", "-d", "${NEXTCLOUD_DATABASE_NAME}" ]

    environment:
      TZ: ${TZ}

      POSTGRES_DB: ${NEXTCLOUD_DATABASE_NAME}
      POSTGRES_USER: ${NEXTCLOUD_DATABASE_USER}
      POSTGRES_PASSWORD: ${NEXTCLOUD_DATABASE_PASSWORD}

    volumes:
      - nextcloud_db:/var/lib/postgresql/data


  nextcloud_cache:
    image: redis:7-alpine
    restart: unless-stopped

    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

    environment:
      TZ: ${TZ}


  nextcloud_nginx:
    image: nginx:1.23-alpine
    restart: unless-stopped

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_network"

      - "traefik.http.routers.nextcloud-https.entrypoints=https"
      - "traefik.http.routers.nextcloud-https.rule=Host(`${NEXTCLOUD_DOMAIN}`)"
      - "traefik.http.routers.nextcloud-https.tls.certresolver=letsencrypt"

      - "traefik.http.middlewares.nextcloud-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.nextcloud-https.redirectscheme.permanent=true"

      - "traefik.http.routers.nextcloud-http.entrypoints=http"
      - "traefik.http.routers.nextcloud-http.rule=Host(`${NEXTCLOUD_DOMAIN}`)"
      - "traefik.http.routers.nextcloud-http.middlewares=nextcloud-https"

    volumes:
      - ./volumes/nginx.conf:/etc/nginx/nginx.conf:ro
      - nextcloud_data:/var/www/html

    networks:
      - traefik_network


  nextcloud:
    image: nextcloud:25-fpm-alpine
    restart: unless-stopped

    environment:
      TZ: ${TZ}

      POSTGRES_HOST: nextcloud_db
      POSTGRES_DB: ${NEXTCLOUD_DATABASE_NAME}
      POSTGRES_USER: ${NEXTCLOUD_DATABASE_USER}
      POSTGRES_PASSWORD: ${NEXTCLOUD_DATABASE_PASSWORD}

      REDIS_HOST: nextcloud_cache

      TRUSTED_PROXIES: ${TRAEFIK_CIDR}
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_DOMAIN}
      OVERWRITEPROTOCOL: https
      OVERWRITECLIURL: https://${NEXTCLOUD_DOMAIN}
      OVERWRITEHOST: ${NEXTCLOUD_DOMAIN}

    volumes:
      - nextcloud_data:/var/www/html

    depends_on:
      - collabora
      - nextcloud_db
      - nextcloud_cache
      - nextcloud_nginx


volumes:
  nextcloud_db:
  nextcloud_data:


networks:
  traefik_network:
    external: true
